{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', () => {\n//   const delayInMilliseconds = parseInt(event.target.elements.delay.value);\n//   const promiseState = event.target.elements.state.value;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (promiseState === 'fulfilled') {\n//         resolve(delayInMilliseconds);\n//       } else {\n//         reject(delayInMilliseconds);\n//       }\n//     }, delayInMilliseconds);\n//   });\n\n//   promise\n//     .then(delay => {\n//       iziToast.success({\n//         title: 'Fulfilled Promise',\n//         message: `✅ Promise fulfilled in ${delay}ms`,\n//       });\n//     })\n//     .catch(delay => {\n//       iziToast.error({\n//         title: 'Rejected Promise',\n//         message: `❌ Promise rejected in /${delay}ms`,\n//       });\n//     });\n// });\n\n// const fieldsetElement = document.querySelector('.form fieldset');\n// const inputElements = fieldsetElement.querySelectorAll('input');\n\n// for (const inputElement of inputElements) {\n//   inputElement.addEventListener('change', () => {\n//     if (inputElement.checked) {\n//       fieldsetElement.style.borderColor = '#808080';\n//     } else {\n//       fieldsetElement.style.borderColor = '#808080';\n//     }\n//   });\n// }\n\nconst form = document.querySelector('.form');\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = event.target.elements.delay.value;\n  let btn = event.target.elements.state.value;\n\n  const createPromise = (btn, delay) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (btn === 'fulfilled') {\n          resolve(delay);\n        } else {\n          reject(delay);\n        }\n      }, delay);\n    });\n  };\n\n  createPromise(btn, delay)\n    .then(res => {\n      iziToast.show({\n        message: `✅ Fulfilled promise in ${delay} ms`,\n        messageColor: 'white',\n        color: '#59a10d',\n        position: 'topRight',\n      });\n    })\n    .catch(error => {\n      iziToast.show({\n        message: `❌ Rejected promise in ${delay}ms`,\n        messageColor: 'white',\n        color: '#E76969',\n        position: 'topRight',\n      });\n    });\n}\n\nform.addEventListener('submit', onSubmit);\n"],"names":["form","onSubmit","event","delay","btn","resolve","reject","res","iziToast","error"],"mappings":"oGA+CA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3C,SAASC,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAQD,EAAM,OAAO,SAAS,MAAM,MAC1C,IAAIE,EAAMF,EAAM,OAAO,SAAS,MAAM,OAEhB,CAACE,EAAKD,IACnB,IAAI,QAAQ,CAACE,EAASC,IAAW,CACtC,WAAW,IAAM,CACXF,IAAQ,YACVC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACd,CAAK,GAGWC,EAAKD,CAAK,EACrB,KAAKI,GAAO,CACXC,EAAS,KAAK,CACZ,QAAS,0BAA0BL,CAAK,MACxC,aAAc,QACd,MAAO,UACP,SAAU,UAClB,CAAO,CACP,CAAK,EACA,MAAMM,GAAS,CACdD,EAAS,KAAK,CACZ,QAAS,yBAAyBL,CAAK,KACvC,aAAc,QACd,MAAO,UACP,SAAU,UAClB,CAAO,CACP,CAAK,CACL,CAEAH,EAAK,iBAAiB,SAAUC,CAAQ"}